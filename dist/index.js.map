{"version":3,"file":"index.js","sources":["../src/utils/index.js","../src/insideValidator.js","../src/index.js"],"sourcesContent":["function query2obj (query) {\r\n  const queryArr = query.split('&').filter(x => x)\r\n  let res = null\r\n  try {\r\n    res = JSON.parse(\r\n      '{' +\r\n        queryArr\r\n          .map(x => {\r\n            const [key, value] = x.split('=')\r\n            return `\"${key}\":\"${value}\"`\r\n          })\r\n          .join(',\\n') +\r\n      '}'\r\n    )\r\n  } catch (err) {\r\n    res = {}\r\n  }\r\n  return res\r\n}\r\n\r\nexport default {\r\n\r\n  /** utils */\r\n\r\n  query2obj,\r\n\r\n  /** common */\r\n\r\n  regex: {\r\n    count (countStr) {\r\n      if (countStr === '*') {\r\n        return '*'\r\n      } else {\r\n        return `{${countStr}}`\r\n      }\r\n    },\r\n    email: {\r\n      whiteLists: [\r\n        'qq.com',\r\n        '163.com',\r\n        'vip.163.com',\r\n        'sohu.com',\r\n        'sina.cn',\r\n        'sina.com',\r\n        'gmail.com',\r\n        'hotmail.com'\r\n      ]\r\n    },\r\n    number: {\r\n      areaLabelReflex: {\r\n        both: '-?',\r\n        neg: '-',\r\n        pos: ''\r\n      }\r\n    }\r\n  }\r\n\r\n}","import utils from './utils'\r\n\r\nexport default {\r\n\r\n  /** social media */\r\n\r\n  // 用户名\r\n  username (options) {\r\n    options = Object.assign({ min: 4, max: 16 }, options)\r\n    return new RegExp(`^[a-zA-Z][a-zA-Z0-9_-]{${options.min - 1},${options.max - 1}}$`)\r\n  },\r\n  // 中文用户名\r\n  username_cn (options) {\r\n    options = Object.assign({ min: 2, max: 8 }, options)\r\n    return new RegExp(`^[a-zA-Z\\\\u4E00-\\\\u9FA5][a-zA-Z0-9\\\\u4E00-\\\\u9FA5_-]{${options.min - 1},${options.max - 1}}$`)\r\n  },\r\n  // 邮箱\r\n  email () {\r\n    return new RegExp(`^([A-Za-z0-9_\\\\-\\\\.])+\\\\@([A-Za-z0-9_\\\\-\\\\.])+\\\\.([A-Za-z]{2,6})$`)\r\n  },\r\n  // 常用邮箱\r\n  email_general () {\r\n    return new RegExp(`^([A-Za-z0-9_\\\\-\\\\.])+\\\\@(${utils.regex.email.whiteLists.join('|')})$`)\r\n  },\r\n  // 手机号码\r\n  mobile: /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\d{8}$/,\r\n  // 身份证\r\n  idcard: /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/,\r\n  // URL\r\n  url: options => /^((https?|ftp|file):\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w.-]*)*\\/?$/.test(options.value) || '不是正确的URL',\r\n\r\n  /** number */\r\n\r\n  // 整数\r\n  interger (options) {\r\n    options = Object.assign({ area: 'both' }, options)\r\n    return new RegExp(`^${utils.regex.number.areaLabelReflex[options.area]}\\\\d+$`)\r\n  },\r\n  // 浮点数\r\n  float (options) {\r\n    options = Object.assign({ area: 'both', count: '*' }, options)\r\n    return new RegExp(`^${utils.regex.number.areaLabelReflex[options.area]}\\\\d*\\\\.\\\\d${utils.regex.count(options.count)}$`)\r\n  },\r\n  // 数字\r\n  number: 'interger||float',\r\n  // 数字比较q\r\n  max (options) {\r\n    options = Object.assign({ max: Number.MAX_SAFE_INTEGER }, options)\r\n    return !Number.isNaN(+options.value) ? (+options.value < +options.max) : `应不大于${options.max}`\r\n  },\r\n  min (options) {\r\n    options = Object.assign({ min: Number.MIN_SAFE_INTEGER }, options)\r\n    return !Number.isNaN(+options.value) ? (+options.value > +options.min) : `应不小于${options.min}`\r\n  },\r\n\r\n  /** general */\r\n\r\n  // 必需值\r\n  required: options => (!['null', 'undefined'].includes(options.value) ? /.+/.test(options.value) : '值缺失'),\r\n}","/* eslint-disable no-sequences */\r\n\r\nimport utils from './utils'\r\nimport insideValidator from './insideValidator.js'\r\n\r\nconst DEFAULT_VALID_OPTIONS = { stragedy: 'and' }\r\n\r\n/** Valy\r\n * @description Valy校验器, 可以使用两种方式调用:\r\n *  1. new Valy('a1111', 'username').result\r\n *  2. new Valy('a1111').valid(['username', _ => _.length === 5]).check()\r\n * @param {Any} rawValue 待校验的值\r\n * @param {Array, Regex, Function} validItems 待校验的选项\r\n */\r\nclass Valy {\r\n  constructor (rawValue, validItems = []) {\r\n    Object.assign(this, {\r\n      pass: false,\r\n      result: null,\r\n      errorMsg: null,\r\n      // TODO value, 每一步的结果 (比如在链式调用中穿插 format 函数)\r\n      rawValue,\r\n      validItems\r\n    })\r\n    return new Proxy(this, {\r\n      get: (target, key, receiver) => {\r\n        const findMap = maps.find(x => x.has(key))\r\n        return findMap\r\n          ? (params = {}) => {\r\n            const handle = findMap.get(key)\r\n            this.valid(\r\n              handle.bind\r\n                ? handle.bind(this, Object.assign({ value: this.rawValue }, params))\r\n                : handle\r\n            )\r\n            return receiver\r\n          }\r\n          : Reflect.get(target, key, receiver)\r\n      }\r\n    })\r\n  }\r\n\r\n  toValid (validItems = this.rawValidItems, options) {\r\n    /** default value */\r\n\r\n    options = Object.assign(DEFAULT_VALID_OPTIONS, options)\r\n\r\n    /** const */\r\n\r\n    const methods = {\r\n      'function': () => {\r\n        const fnResult = validItems(this.rawValue)\r\n        return ['function', 'object'].includes(typeof fnResult)\r\n          ? this.toValid(fnResult)\r\n          : fnResult\r\n      },\r\n      'array': () => {\r\n        const results = validItems.map(x => this.toValid(x))\r\n        return options.stragedy === 'and'\r\n          ? results.every(x => x === true)\r\n          : results.some(x => x === true)\r\n      },\r\n      'regexp': () => validItems.test(this.rawValue),\r\n      'boolean': () => validItems,\r\n      'undefined': () => false,\r\n      'error': () => { throw new Error(`unsupported type of validItem : ${typeof validItems} - ${validItems}`) }\r\n    }\r\n\r\n    /** vars */\r\n\r\n    let toValidResult = null\r\n    switch (typeof validItems) {\r\n      case 'object':\r\n        if (Array.isArray(validItems)) {\r\n          toValidResult = methods['array'].bind(this)()\r\n        } else if (validItems instanceof RegExp) {\r\n          toValidResult = methods['regexp'].bind(this)()\r\n        }\r\n        break\r\n\r\n      case 'string':\r\n        const validArr = validItems.split('||')\r\n        if (validArr.length > 1) {\r\n          toValidResult = this.toValid(validArr, Object.assign(options, { stragedy: 'or' }))\r\n        } else {\r\n          const toFindHandle = validItems.split('?')\r\n          const handle = insideValidator[toFindHandle[0]]\r\n          if (!handle) {\r\n            toValidResult = false\r\n            this.errorMsg = validItems\r\n            break\r\n          }\r\n          if (typeof handle === 'function') {\r\n            const params = utils.query2obj(`value=${this.rawValue}&` + (toFindHandle[1] || ''))\r\n            const handleFnRes = handle(params)\r\n            toValidResult = this.toValid(handleFnRes)\r\n          } else {\r\n            toValidResult = this.toValid(handle)\r\n          }\r\n        }\r\n        break\r\n\r\n      default:\r\n        toValidResult = methods[typeof validItems].bind(this)()\r\n    }\r\n\r\n    return toValidResult\r\n  }\r\n\r\n  // 主动调用校验\r\n  valid (validItems) {\r\n    if (this.pass) return this\r\n    if (!(this.result = this.toValid(validItems))) {\r\n      this.pass = true\r\n    }\r\n    return this\r\n  }\r\n\r\n  // 对值进行格式化\r\n  format (fn = _ => _) {\r\n    this.rawValue = fn(this.rawValue)\r\n    return this\r\n  }\r\n\r\n  // 返回校验结果\r\n  exec () {\r\n    this.result = this.toValid()\r\n    return this.result\r\n  }\r\n\r\n  // 返回判断检验结果是否为某一特定的值\r\n  check (assertResult = true) {\r\n    return this.result === assertResult\r\n  }\r\n  not (assertResult = false) {\r\n    return this.result !== assertResult\r\n  }\r\n  getRes () {\r\n    return this.errorMsg || this.result\r\n  }\r\n}\r\n\r\nconst maps = []\r\nValy.use = models => maps.unshift(new Map(Object.entries(models)))\r\nValy.use(insideValidator)\r\n\r\nexport default Valy"],"names":["const","let","this"],"mappings":";;AAAA,SAAS,SAAS,EAAE,KAAK,EAAE;EACzBA,IAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,WAAC,GAAE,SAAG,IAAC,EAAC;EAChDC,IAAI,GAAG,GAAG,KAAI;EACd,IAAI;IACF,GAAG,GAAG,IAAI,CAAC,KAAK;MACd,GAAG;QACD,QAAQ;WACL,GAAG,WAAC,GAAE;YACL,OAAkB,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG;gBAAzB;gBAAK,KAAK,UAAgB;YACjC,eAAW,GAAG,aAAM,KAAK,QAAG;WAC7B,CAAC;WACD,IAAI,CAAC,KAAK,CAAC;MAChB,GAAG;MACJ;GACF,CAAC,OAAO,GAAG,EAAE;IACZ,GAAG,GAAG,GAAE;GACT;EACD,OAAO,GAAG;CACX;;AAED,YAAe;;;;aAIb,SAAS;;;;EAIT,KAAK,EAAE;IACL,qBAAK,EAAE,QAAQ,EAAE;MACf,IAAI,QAAQ,KAAK,GAAG,EAAE;QACpB,OAAO,GAAG;OACX,MAAM;QACL,cAAW,QAAQ,OAAG;OACvB;KACF;IACD,KAAK,EAAE;MACL,UAAU,EAAE;QACV,QAAQ;QACR,SAAS;QACT,aAAa;QACb,UAAU;QACV,SAAS;QACT,UAAU;QACV,WAAW;QACX,aAAa;OACd;KACF;IACD,MAAM,EAAE;MACN,eAAe,EAAE;QACf,IAAI,EAAE,IAAI;QACV,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,EAAE;OACR;KACF;GACF;;;;ACrDH,sBAAe;;;;;EAKb,2BAAQ,EAAE,OAAO,EAAE;IACjB,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,OAAO,EAAC;IACrD,OAAO,IAAI,MAAM,+BAA2B,OAAO,CAAC,GAAG,GAAG,EAAC,UAAI,OAAO,CAAC,GAAG,GAAG,EAAC,SAAK;GACpF;;EAED,iCAAW,EAAE,OAAO,EAAE;IACpB,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,OAAO,EAAC;IACpD,OAAO,IAAI,MAAM,6DAAyD,OAAO,CAAC,GAAG,GAAG,EAAC,UAAI,OAAO,CAAC,GAAG,GAAG,EAAC,SAAK;GAClH;;EAED,qBAAK,IAAI;IACP,OAAO,IAAI,MAAM,CAAC,mEAAmE,CAAC;GACvF;;EAED,qCAAa,IAAI;IACf,OAAO,IAAI,MAAM,kCAA8B,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAC,SAAK;GAC3F;;EAED,MAAM,EAAE,4DAA4D;;EAEpE,MAAM,EAAE,8FAA8F;;EAEtG,GAAG,YAAE,SAAQ,SAAG,sEAAsE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,aAAU;;;;;EAKxH,2BAAQ,EAAE,OAAO,EAAE;IACjB,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,OAAO,EAAC;IAClD,OAAO,IAAI,MAAM,SAAK,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAC,YAAQ;GAC/E;;EAED,qBAAK,EAAE,OAAO,EAAE;IACd,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,OAAO,EAAC;IAC9D,OAAO,IAAI,MAAM,SAAK,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAC,mBAAa,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAC,QAAI;GACxH;;EAED,MAAM,EAAE,iBAAiB;;EAEzB,iBAAG,EAAE,OAAO,EAAE;IACZ,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAC;IAClE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,GAAG,eAAW,OAAO,CAAC,GAAG,EAAE;GAC9F;EACD,iBAAG,EAAE,OAAO,EAAE;IACZ,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAC;IAClE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,GAAG,eAAW,OAAO,CAAC,GAAG,EAAE;GAC9F;;;;;EAKD,QAAQ,YAAE,SAAQ,UAAI,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,IAAC;;;AC1D1G;;AAEA,AAGAD,IAAM,qBAAqB,GAAG,EAAE,QAAQ,EAAE,KAAK,GAAE;;;;;;;;;AASjD,IAAM,IAAI,GACR,aAAW,EAAE,QAAQ,EAAE,UAAe,EAAE;;yCAAP,GAAG;;EACpC,MAAQ,CAAC,MAAM,CAAC,IAAI,EAAE;IACpB,IAAM,EAAE,KAAK;IACb,MAAQ,EAAE,IAAI;IACd,QAAU,EAAE,IAAI;;IAEhB,UAAE,QAAQ;IACV,YAAE,UAAU;GACX,EAAC;EACJ,OAAS,IAAI,KAAK,CAAC,IAAI,EAAE;IACvB,GAAK,YAAG,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE;MAC7B,IAAQ,OAAO,GAAG,IAAI,CAAC,IAAI,WAAC,GAAE,SAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAC,EAAC;MAC5C,OAAS,OAAO;oBACT,MAAW,EAAE;yCAAP,GAAG;;UACZ,IAAQ,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAC;UACjC,MAAM,CAAC,KAAK;YACV,MAAQ,CAAC,IAAI;gBACP,MAAM,CAAC,IAAI,CAACE,MAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,EAAEA,MAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;gBAClE,MAAM;YACX;UACH,OAAS,QAAQ;SAChB;UACC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC;KACvC;GACF,CAAC;EACH;;AAEH,eAAE,OAAO,qBAAE,UAA+B,EAAE,OAAO,EAAE;;2CAAhC,GAAG,IAAI,CAAC;;;;EAG3B,OAAS,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,OAAO,EAAC;;;;EAIzD,IAAQ,OAAO,GAAG;IAChB,UAAY,cAAK;MACf,IAAQ,QAAQ,GAAG,UAAU,CAACA,MAAI,CAAC,QAAQ,EAAC;MAC5C,OAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAO,QAAQ,CAAC;UACnDA,MAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;UACtB,QAAQ;KACb;IACH,OAAS,cAAK;MACZ,IAAQ,OAAO,GAAG,UAAU,CAAC,GAAG,WAAC,GAAE,SAAGA,MAAI,CAAC,OAAO,CAAC,CAAC,IAAC,EAAC;MACtD,OAAS,OAAO,CAAC,QAAQ,KAAK,KAAK;UAC7B,OAAO,CAAC,KAAK,WAAC,GAAE,SAAG,CAAC,KAAK,OAAI,CAAC;UAC9B,OAAO,CAAC,IAAI,WAAC,GAAE,SAAG,CAAC,KAAK,OAAI,CAAC;KAClC;IACH,QAAU,cAAK,SAAG,UAAU,CAAC,IAAI,CAACA,MAAI,CAAC,QAAQ,IAAC;IAChD,SAAW,cAAK,SAAG,aAAU;IAC7B,WAAa,cAAK,SAAG,QAAK;IAC1B,OAAS,cAAK,EAAK,MAAM,IAAI,KAAK,wCAAoC,OAAO,WAAU,WAAM,UAAU,EAAG,EAAE;IAC3G;;;;EAIH,IAAM,aAAa,GAAG,KAAI;EAC1B,QAAU,OAAO,UAAU;IACzB,KAAO,QAAQ;MACb,IAAM,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QAC/B,aAAe,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAE;OAC9C,MAAM,IAAI,UAAU,YAAY,MAAM,EAAE;QACzC,aAAe,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAE;OAC/C;MACH,KAAO;;IAET,KAAO,QAAQ;MACb,IAAQ,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,EAAC;MACzC,IAAM,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,aAAe,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAC;OACnF,MAAM;QACP,IAAQ,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,EAAC;QAC5C,IAAQ,MAAM,GAAG,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;QACjD,IAAM,CAAC,MAAM,EAAE;UACb,aAAe,GAAG,MAAK;UACvB,IAAM,CAAC,QAAQ,GAAG,WAAU;UAC5B,KAAO;SACN;QACH,IAAM,OAAO,MAAM,KAAK,UAAU,EAAE;UAClC,IAAQ,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,YAAS,IAAI,CAAC,SAAQ,MAAG,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAC;UACrF,IAAQ,WAAW,GAAG,MAAM,CAAC,MAAM,EAAC;UACpC,aAAe,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAC;SAC1C,MAAM;UACP,aAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC;SACrC;OACF;MACH,KAAO;;IAET;MACE,aAAe,GAAG,OAAO,CAAC,OAAO,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAE;GAC1D;;EAEH,OAAS,aAAa;EACrB;;;AAGH,eAAE,KAAK,mBAAE,UAAU,EAAE;EACnB,IAAM,IAAI,CAAC,IAAI,IAAE,OAAO,MAAI;EAC5B,IAAM,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;IAC/C,IAAM,CAAC,IAAI,GAAG,KAAI;GACjB;EACH,OAAS,IAAI;EACZ;;;AAGH,eAAE,MAAM,oBAAE,EAAW,EAAE;2BAAX,aAAG,GAAE,SAAG;;EAClB,IAAM,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAC;EACnC,OAAS,IAAI;EACZ;;;AAGH,eAAE,IAAI,oBAAI;EACR,IAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAE;EAC9B,OAAS,IAAI,CAAC,MAAM;EACnB;;;AAGH,eAAE,KAAK,mBAAE,YAAmB,EAAE;+CAAT,GAAG;;EACtB,OAAS,IAAI,CAAC,MAAM,KAAK,YAAY;EACpC;AACH,eAAE,GAAG,iBAAE,YAAoB,EAAE;+CAAV,GAAG;;EACpB,OAAS,IAAI,CAAC,MAAM,KAAK,YAAY;EACpC;AACH,eAAE,MAAM,sBAAI;EACV,OAAS,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM;CACpC,CACF;;AAEDF,IAAM,IAAI,GAAG,GAAE;AACf,IAAI,CAAC,GAAG,aAAG,QAAO,SAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAC;AAClE,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;;;;"}